/**
 * @fileoverview gRPC-Web generated client stub for teddy.todos.todo
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.3
// source: todo.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as todo_pb from './todo_pb'; // proto import: "todo.proto"


export class TodoServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetTodo = new grpcWeb.MethodDescriptor(
    '/teddy.todos.todo.TodoService/GetTodo',
    grpcWeb.MethodType.UNARY,
    todo_pb.GetTodoRequest,
    todo_pb.GetTodoResponse,
    (request: todo_pb.GetTodoRequest) => {
      return request.serializeBinary();
    },
    todo_pb.GetTodoResponse.deserializeBinary
  );

  getTodo(
    request: todo_pb.GetTodoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<todo_pb.GetTodoResponse>;

  getTodo(
    request: todo_pb.GetTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodoResponse) => void): grpcWeb.ClientReadableStream<todo_pb.GetTodoResponse>;

  getTodo(
    request: todo_pb.GetTodoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/teddy.todos.todo.TodoService/GetTodo',
        request,
        metadata || {},
        this.methodDescriptorGetTodo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/teddy.todos.todo.TodoService/GetTodo',
    request,
    metadata || {},
    this.methodDescriptorGetTodo);
  }

  methodDescriptorGetTodos = new grpcWeb.MethodDescriptor(
    '/teddy.todos.todo.TodoService/GetTodos',
    grpcWeb.MethodType.UNARY,
    todo_pb.GetTodosRequest,
    todo_pb.GetTodosResponse,
    (request: todo_pb.GetTodosRequest) => {
      return request.serializeBinary();
    },
    todo_pb.GetTodosResponse.deserializeBinary
  );

  getTodos(
    request: todo_pb.GetTodosRequest,
    metadata?: grpcWeb.Metadata | null): Promise<todo_pb.GetTodosResponse>;

  getTodos(
    request: todo_pb.GetTodosRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodosResponse) => void): grpcWeb.ClientReadableStream<todo_pb.GetTodosResponse>;

  getTodos(
    request: todo_pb.GetTodosRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodosResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/teddy.todos.todo.TodoService/GetTodos',
        request,
        metadata || {},
        this.methodDescriptorGetTodos,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/teddy.todos.todo.TodoService/GetTodos',
    request,
    metadata || {},
    this.methodDescriptorGetTodos);
  }

  methodDescriptorPutTodo = new grpcWeb.MethodDescriptor(
    '/teddy.todos.todo.TodoService/PutTodo',
    grpcWeb.MethodType.UNARY,
    todo_pb.PutTodoRequest,
    todo_pb.PutTodoResponse,
    (request: todo_pb.PutTodoRequest) => {
      return request.serializeBinary();
    },
    todo_pb.PutTodoResponse.deserializeBinary
  );

  putTodo(
    request: todo_pb.PutTodoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<todo_pb.PutTodoResponse>;

  putTodo(
    request: todo_pb.PutTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: todo_pb.PutTodoResponse) => void): grpcWeb.ClientReadableStream<todo_pb.PutTodoResponse>;

  putTodo(
    request: todo_pb.PutTodoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: todo_pb.PutTodoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/teddy.todos.todo.TodoService/PutTodo',
        request,
        metadata || {},
        this.methodDescriptorPutTodo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/teddy.todos.todo.TodoService/PutTodo',
    request,
    metadata || {},
    this.methodDescriptorPutTodo);
  }

  methodDescriptorSetIsCompleted = new grpcWeb.MethodDescriptor(
    '/teddy.todos.todo.TodoService/SetIsCompleted',
    grpcWeb.MethodType.UNARY,
    todo_pb.SetIsCompletedRequest,
    todo_pb.Todo,
    (request: todo_pb.SetIsCompletedRequest) => {
      return request.serializeBinary();
    },
    todo_pb.Todo.deserializeBinary
  );

  setIsCompleted(
    request: todo_pb.SetIsCompletedRequest,
    metadata?: grpcWeb.Metadata | null): Promise<todo_pb.Todo>;

  setIsCompleted(
    request: todo_pb.SetIsCompletedRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: todo_pb.Todo) => void): grpcWeb.ClientReadableStream<todo_pb.Todo>;

  setIsCompleted(
    request: todo_pb.SetIsCompletedRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: todo_pb.Todo) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/teddy.todos.todo.TodoService/SetIsCompleted',
        request,
        metadata || {},
        this.methodDescriptorSetIsCompleted,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/teddy.todos.todo.TodoService/SetIsCompleted',
    request,
    metadata || {},
    this.methodDescriptorSetIsCompleted);
  }

}

